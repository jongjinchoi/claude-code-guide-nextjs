{
  "title": "Claude Code Help",
  "header": {
    "title": "Claude Code Help",
    "subtitle": {
      "mac": "First time using Terminal? We've got your back!",
      "windows": "First time using Command Prompt? We've got your back!"
    },
    "badge": "FAQ & Troubleshooting"
  },
  "intro": {
    "title": {
      "mac": "First time using Terminal? We've got your back!",
      "windows": "First time using Command Prompt? We've got your back!"
    },
    "description": "Don't worry - everyone hits these bumps (even developers who've been coding for years!). We'll walk through everything together, nice and easy."
  },
  "section_headers": {
    "urgent": {
      "title": "Help! I'm stuck!",
      "tagText": "Quick Fix",
      "icon": "fas fa-exclamation-triangle",
      "tagIcon": "fas fa-bolt",
      "tagClass": "urgent"
    },
    "normal": {
      "title": "Wait, is this supposed to happen?",
      "tagText": "Reassurance",
      "icon": "fas fa-question-circle",
      "tagIcon": "fas fa-heart",
      "tagClass": "comfort"
    },
    "basics": {
      "title": "Good to know first",
      "tagText": "Basic Knowledge",
      "icon": "fas fa-book",
      "tagIcon": "fas fa-graduation-cap",
      "tagClass": "knowledge"
    }
  },
  "urgent": {
    "mac": {
      "terminal_not_found": {
        "title": "Can't find Terminal? No worries!",
        "description": "Terminal is already on your Mac - it's just a bit hidden. Let's find it together:",
        "steps": [
          "Press Command (Cmd) ⌘ + Space (Spotlight Search)",
          "Type \"terminal\" or \"Terminal\"",
          "Press Enter and Terminal will open!"
        ],
        "terminal_example": {
          "title": "This is what Terminal looks like when opened",
          "content": "Last login: Mon Jan 8 10:32:15 on ttys001"
        },
        "tip": "If you'll use it often, add Terminal to your Dock. Right-click the Terminal icon and select \"Options > Keep in Dock\"."
      },
      "password_invisible": {
        "title": "My password is invisible! Is it broken?",
        "description": "Nope, you're doing great! Terminal hides your password on purpose (like how ATMs hide your PIN). Just type it anyway - it's working even though you can't see it.",
        "terminal_example": {
          "title": "Password entry screen - Normal behavior",
          "command": "sudo npm install -g claude",
          "output": "Password:",
          "comment": "← Nothing appears on screen when typing password (normal for security)"
        },
        "steps": [
          "Just type your Mac login password",
          "Nothing shows on screen but it's being entered",
          "Press Enter when done"
        ],
        "tip": "If it says wrong password, try typing slowly again. Also check if Caps Lock is on!"
      },
      "permission_denied": {
        "title": "Ugh, permission denied errors!",
        "description": "Your Mac is just being protective (like a security guard). We need to tell it you're allowed to install this.",
        "wrong_way": {
          "title": "Wrong way - Permission error",
          "command": "npm install -g claude",
          "errors": [
            "npm ERR! Error: EACCES: permission denied, mkdir '/usr/local/lib/node_modules/claude'",
            "npm ERR! The operation was rejected by your operating system.",
            "npm ERR! It is likely you do not have the permissions to access this file as the current user"
          ]
        },
        "right_way": {
          "title": "Right way - Using sudo",
          "command": "sudo npm install -g claude",
          "output": "Password:",
          "comment": "← Enter your Mac password here to proceed with installation"
        },
        "solution": "The magic word 'sudo' tells your Mac \"I'm the owner, let me in!\" - just like using your house key."
      }
    },
    "windows": {
      "cmd_not_found": {
        "title": "Can't find Command Prompt? Let me help!",
        "description": "Command Prompt is already on your PC - here are the quickest ways to find it:",
        "steps": [
          "Method 1: Press Windows (Win) ⊞ + R, type \"cmd\" and press Enter",
          "Method 2: Click Start → Search for \"cmd\" or \"Command Prompt\"",
          "Method 3: Press Windows (Win) ⊞ + X and select \"Command Prompt\""
        ],
        "terminal_example": {
          "title": "This is what Command Prompt looks like when opened",
          "content": [
            "Microsoft Windows [Version 10.0.22631.4169]",
            "(c) Microsoft Corporation. All rights reserved."
          ]
        },
        "tip": "If you use Command Prompt often, pin it to your taskbar for easy access."
      },
      "access_denied": {
        "title": "Access denied? Let's fix that!",
        "description": "Windows is being protective (like a security guard). We need to run Command Prompt with special permissions:",
        "steps": [
          "Right-click Command Prompt",
          "Select \"Run as administrator\"",
          "Click \"Yes\" when User Account Control appears",
          "Try the command again"
        ]
      }
    }
  },
  "normal": {
    "installation_slow": {
      "title": "It's been 5+ minutes... did it freeze?",
      "description": "Nope, it's still working! Think of it like downloading a really big movie - Claude Code needs to grab lots of files from the internet and set them all up properly.",
      "terminal_example": {
        "title": "Installation in progress - Taking a while",
        "mac": {
          "command": "sudo npm install -g @anthropic-ai/claude-code",
          "outputs": [
            "Password: # ← After entering password",
            "",
            "npm WARN deprecated har-validator@5.1.5: this library is no longer supported",
            "npm WARN deprecated uuid@3.4.0: Please upgrade to version 7 or higher.",
            "",
            "⠧ Installing: express@4.18.2",
            "⠧ Installing: lodash@4.17.21",
            "⠧ Installing: moment@2.29.4",
            "# ← Installing various packages one by one!"
          ]
        },
        "windows": {
          "command": "npm install -g @anthropic-ai/claude-code",
          "outputs": [
            "npm WARN deprecated har-validator@5.1.5: this library is no longer supported",
            "npm WARN deprecated uuid@3.4.0: Please upgrade to version 7 or higher.",
            "",
            "[░░░░░░░░░░░░░░░░░░░░] | idealTree:claude-code: timing idealTree:node_modules/.staging",
            "# ← Progress bar moves slowly",
            "",
            "[████░░░░░░░░░░░░░░░░] \\ fetchMetadata: sill resolveWithNewModule express@4.18.2",
            "[████████░░░░░░░░░░░░] | fetchMetadata: timing metavuln:calculate:security-advisory",
            "[████████████░░░░░░░░] / extract:lodash: verb lock using C:\\Users\\username\\AppData\\Roaming\\npm",
            "# ← Downloading and installing each package"
          ]
        }
      },
      "tip": "Perfect excuse for a coffee break! ☕ This usually takes 5-10 minutes depending on your internet speed. The spinning symbols mean it's working hard."
    },
    "warn_messages": {
      "title": "Yikes! I see WARN messages everywhere!",
      "description": "Don't panic! These warnings are like 'caution' signs - they're just FYIs, not stop signs. Your installation is still going smoothly.",
      "terminal_example": {
        "title": "Warning messages during installation - Normal situation",
        "mac_command": "npm install some-package",
        "windows_command": "npm install some-package",
        "windows_note": "# → For Command Prompt (cmd)",
        "warnings": [
          {
            "text": "npm WARN deprecated package@1.0.0: This package is deprecated",
            "comment": "→ Just means this package is old (like a vintage car - still runs fine!)"
          },
          {
            "text": "npm WARN optional SKIPPING OPTIONAL DEPENDENCY",
            "comment": "→ Skipping extras you don't need (like declining fries with your burger)"
          },
          {
            "text": "npm WARN some-module@2.1.0 requires a peer dependency",
            "comment": "→ Suggesting helper programs (like recommending a side dish)"
          }
        ]
      },
      "tip": "Golden rule: Yellow WARN = Keep going! Red ERROR = Time to stop and fix. You're doing great if you only see yellow!"
    },
    "terminal_symbols": {
      "title": {
        "mac": "I see strange symbols or colors in Terminal",
        "windows": "I see strange symbols or colors in Command Prompt"
      },
      "description": {
        "mac": "Terminal uses various colors and symbols to distinguish information.",
        "windows": "Command Prompt uses various colors and symbols to distinguish information."
      },
      "terminal_example": {
        "title": {
          "mac": "Terminal colors and symbols example",
          "windows": "Command Prompt colors and symbols example"
        },
        "command": "npm install express",
        "outputs": [
          {
            "text": "added 64 packages in 3s",
            "comment": "→ Default color = Success/Complete"
          },
          {
            "text": "npm WARN deprecated package@1.0.0: This package is deprecated",
            "type": "warn",
            "comment": "→ Yellow WARN = Warning (can ignore)"
          },
          {
            "text": "npm ERR! code ENOENT\nnpm ERR! syscall open",
            "type": "error"
          },
          {
            "text": "npm ERR! path /Users/username/package.json",
            "type": "error",
            "os": "mac"
          },
          {
            "text": "npm ERR! path C:\\Users\\username\\package.json",
            "type": "error",
            "os": "windows"
          },
          {
            "comment": "→ Red ERR! = Error (needs attention)"
          }
        ],
        "prompt_symbols": {
          "mac": {
            "symbol": "% or $",
            "meaning": "Waiting for command input"
          },
          "windows": {
            "symbol": ">",
            "meaning": "Waiting for command input"
          }
        }
      }
    }
  },
  "basics": {
    "copy_paste": {
      "title": "Wait, how do I copy and paste here?",
      "description": {
        "mac": "Good question! Terminal is a bit quirky with copy/paste, but once you know the trick, it's easy:",
        "windows": "Good question! Command Prompt is a bit quirky with copy/paste, but once you know the trick, it's easy:"
      },
      "methods": {
        "mac": {
          "copy": "Select text then Command (Cmd) ⌘ + C",
          "paste": "Command (Cmd) ⌘ + V"
        },
        "windows": {
          "copy": "Select text then Control (Ctrl) + C or right-click",
          "paste": "Control (Ctrl) + V or right-click"
        }
      }
    },
    "terminal_escape": {
      "title": {
        "mac": "Oops! I typed something weird and now Terminal looks funny",
        "windows": "Oops! I typed something weird and now Command Prompt looks funny"
      },
      "description": {
        "mac": "No worries, you didn't break anything! Here's your escape plan:",
        "windows": "No worries, you didn't break anything! Here's your escape plan:"
      },
      "solutions": [
        "Control (Ctrl) + C : Stop what's currently running",
        "Control (Ctrl) + D : Exit the program",
        "Type exit : Close Terminal/Command Prompt",
        "Last resort: Just close and reopen the Terminal/Command Prompt window"
      ],
      "exit_example": {
        "title": {
          "mac": "Completely closing Terminal",
          "windows": "Completely closing Command Prompt"
        },
        "command": "exit",
        "result": {
          "mac": "[Process completed]",
          "windows": "# → Command Prompt window closes"
        },
        "comment": {
          "mac": "→ Terminal window closes, or just this message remains depending on settings"
        }
      }
    },
    "basic_commands": {
      "title": "What do these mysterious commands mean?",
      "description": {
        "mac": "Think of these as simple instructions you give to your computer - like texting, but shorter:",
        "windows": "Think of these as simple instructions you give to your computer - like texting, but shorter:"
      },
      "commands": {
        "mac": {
          "pwd_name": "pwd",
          "pwd_desc": "See where you are (like checking a map)",
          "pwd_command": "pwd",
          "pwd_output": "/Users/yourname",
          "pwd_comment": "→ Means you're in the /Users/yourname folder",
          "ls_name": "ls",
          "ls_desc": "See what's in this folder (like opening a drawer)",
          "ls_command": "ls",
          "ls_output": "Desktop    Documents    Downloads    Pictures",
          "ls_comment": "→ Shows files and folders in current directory",
          "cd_name": "cd",
          "cd_desc": "Go to a different folder (like walking into another room)",
          "cd_command": "cd Desktop",
          "cd_prompt": "username@MacBook-Pro Desktop %",
          "cd_comment": "→ Moved to Desktop folder! (notice the prompt changed)",
          "cd_up_name": "cd ..",
          "cd_up_desc": "Go back one level (like walking out of a room)",
          "cd_up_from": "username@MacBook-Pro Desktop %",
          "cd_up_command": "cd ..",
          "cd_up_to": "username@MacBook-Pro ~ %",
          "cd_up_comment": "→ Returned to home folder from Desktop",
          "mkdir_name": "mkdir",
          "mkdir_desc": "Make a new folder (like creating a new drawer)",
          "mkdir_command1": "mkdir my-project",
          "mkdir_command2": "ls",
          "mkdir_output": "Desktop    Documents    Downloads    Pictures    my-project",
          "mkdir_comment": "→ my-project folder was created!",
          "clear_name": "clear",
          "clear_desc": "Clean up the screen (like erasing a whiteboard)",
          "clear_command": "clear",
          "clear_comment": "→ Terminal screen becomes clean! (previous content still available by scrolling)",
          "cat_name": "cat",
          "cat_desc": "Peek inside a file (like reading a document)",
          "cat_command": "cat package.json",
          "cat_output": "{\n  \"name\": \"my-project\",\n  \"version\": \"1.0.0\",\n  \"description\": \"My first project\"\n}",
          "cat_comment": "→ Shows the entire file contents",
          "which_name": "which",
          "which_desc": "Find where a program lives (like looking up an address)",
          "which_command1": "which node",
          "which_command2": "which npm",
          "which_output1": "/usr/local/bin/node",
          "which_output2": "/usr/local/bin/npm",
          "which_comment": "→ Node.js and npm are properly installed!",
          "cp_name": "cp",
          "cp_desc": "Make a copy of a file (like photocopying)",
          "cp_command1": "cp README.md README-backup.md",
          "cp_command2": "ls *.md",
          "cp_output": "README-backup.md    README.md",
          "cp_comment": "→ Copy of README.md was created",
          "mv_name": "mv",
          "mv_desc": "Move or rename files (like relocating or relabeling)",
          "mv_rename_command": "mv old-name.txt new-name.txt",
          "mv_rename_comment": "→ File was renamed",
          "mv_move_command": "mv file.txt Desktop/",
          "mv_move_comment": "→ file.txt was moved to Desktop folder",
          "touch_name": "touch",
          "touch_desc": "Create a blank file (like getting a fresh sheet of paper)",
          "touch_command1": "touch index.js",
          "touch_command2": "ls *.js",
          "touch_output": "index.js",
          "touch_comment": "→ Empty index.js file was created"
        },
        "windows": {
          "cd_name": "cd",
          "cd_desc": "See where you are (like checking your GPS)",
          "cd_command": "cd",
          "cd_output": "C:\\Users\\username",
          "cd_comment": "→ Means you're in the C:\\Users\\username folder",
          "dir_name": "dir",
          "dir_desc": "See what's in this folder (like looking in a filing cabinet)",
          "dir_command": "dir",
          "dir_output": "2025-07-16  10:30 AM    <DIR>          .\n2025-07-16  10:30 AM    <DIR>          ..\n2025-07-16  09:15 AM    <DIR>          Desktop\n2025-07-15  02:30 PM    <DIR>          Documents\n2025-07-14  05:45 PM    <DIR>          Downloads\n2025-07-13  11:20 AM    <DIR>          Pictures",
          "dir_comment": "→ Shows files and folders in current directory",
          "cd_folder_name": "cd",
          "cd_folder_desc": "Go to a different folder (like entering a different room)",
          "cd_folder_command": "cd Desktop",
          "cd_folder_prompt": "C:\\Users\\username\\Desktop>",
          "cd_folder_comment": "→ Moved to Desktop folder! (notice the prompt changed)",
          "cd_up_name": "cd ..",
          "cd_up_desc": "Go back one level (like walking out of a room)",
          "cd_up_from": "C:\\Users\\username\\Desktop>",
          "cd_up_command": "cd ..",
          "cd_up_to": "C:\\Users\\username>",
          "cd_up_comment": "→ Returned to user folder from Desktop",
          "mkdir_name": "mkdir",
          "mkdir_desc": "Make a new folder (like creating a new drawer)",
          "mkdir_command1": "mkdir my-project",
          "mkdir_command2": "dir",
          "mkdir_output": "2025-07-16  10:35 AM    <DIR>          my-project\n2025-07-16  10:30 AM    <DIR>          Desktop\n2025-07-15  02:30 PM    <DIR>          Documents",
          "mkdir_comment": "→ my-project folder was created!",
          "cls_name": "cls",
          "cls_desc": "Clean up the screen (like wiping a blackboard)",
          "cls_command": "cls",
          "cls_comment": "→ Command Prompt screen becomes clean!",
          "type_name": "type",
          "type_desc": "Read what's in a file (like opening a letter)",
          "type_command": "type package.json",
          "type_output": "{\n  \"name\": \"my-project\",\n  \"version\": \"1.0.0\",\n  \"description\": \"My first project\"\n}",
          "type_comment": "→ Shows the entire file contents",
          "where_name": "where",
          "where_desc": "Find where a program is installed (like finding an app on your phone)",
          "where_command1": "where node",
          "where_command2": "where npm",
          "where_output1": "C:\\Program Files\\nodejs\\node.exe",
          "where_output2": "C:\\Program Files\\nodejs\\npm.cmd",
          "where_comment": "→ Node.js and npm are properly installed!",
          "copy_name": "copy",
          "copy_desc": "Make a duplicate file (like making a photocopy)",
          "copy_command1": "copy README.md README-backup.md",
          "copy_command2": "dir *.md",
          "copy_output": "        1 file(s) copied.\n2025-07-16  10:40 AM         1,245 README-backup.md\n2025-07-16  10:30 AM         1,245 README.md",
          "copy_comment": "→ Copy of README.md was created",
          "move_ren_name": "move or ren",
          "move_ren_desc": "Move files around or give them new names",
          "ren_command": "ren old-name.txt new-name.txt",
          "ren_comment": "→ File was renamed",
          "move_command": "move file.txt Desktop",
          "move_output": "        1 file(s) moved.",
          "move_comment": "→ file.txt was moved to Desktop folder",
          "echo_name": "echo >",
          "echo_desc": "Create a new blank file (like getting a fresh notebook page)",
          "echo_command1": "echo. > index.js",
          "echo_command2": "dir *.js",
          "echo_output": "2025-07-16  10:45 AM             2 index.js",
          "echo_comment": "→ index.js file was created"
        }
      }
    },
    "api_key": {
      "title": "What's this API Key thing?",
      "description": "Think of an API Key as your personal ID card for Claude - it's how Claude knows it's really you!",
      "steps": [
        "Go to console.anthropic.com",
        "Sign up or log in",
        "Click \"API Keys\" menu",
        "Click \"Create Key\" button",
        "Copy the generated key to a safe place"
      ],
      "warning": "Important! Your API Key appears only once (like a secret code). Copy it somewhere safe - you can't see it again!"
    }
  },
  "alerts": {
    "terminal_dock_tip": {
      "title": "Tip",
      "content": "Pro tip: Using Terminal a lot? Keep it handy! Right-click the Terminal icon and select \"Options > Keep in Dock\" - boom, one-click access!"
    },
    "cmd_taskbar_tip": {
      "title": "Tip",
      "content": "Pro tip: Using Command Prompt a lot? Pin it to your taskbar for instant access - right-click and select \"Pin to taskbar\"!"
    },
    "installation_time": {
      "title": "Totally normal!",
      "content": "Perfect coffee break time! ☕ Installation usually takes 5-10 minutes. Those spinning symbols? They mean it's working hard!"
    },
    "warn_vs_error": {
      "title": "Quick tip!",
      "content": "Yellow warnings are like \"caution\" signs - you can keep driving! Only red ERRORs mean \"stop\". You're doing great!"
    },
    "api_key_warning": {
      "title": "Don't lose this!",
      "content": "Your API Key is like a one-time password reveal - screenshot it, write it down, save it somewhere! Once it's gone, it's gone."
    }
  },
  "common_issues": {
    "password_tips": "Wrong password? No worries! Try again slowly (we all fat-finger passwords sometimes). Pro tip: Check if Caps Lock is sneakily on!"
  },
  "additional_info": {
    "sudo_explanation": "'sudo' is like saying 'pretty please' to your computer - it gives you temporary superpowers to install things!"
  },
  "repl": {
    "title": {
      "mac": "Exit Claude Code - Keep Terminal open",
      "windows": "Exit Claude Code - Keep Command Prompt open"
    },
    "description": "Press Enter to exit Claude Code",
    "loading": "Loading Claude Code preview..."
  }
}