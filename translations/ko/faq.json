{
  "title": "Claude Code 도움말",
  "header": {
    "title": "Claude Code 도움말",
    "subtitle": {
      "mac": "터미널이 처음이신가요? 걱정 마세요!",
      "windows": "명령 프롬프트가 처음이신가요? 걱정 마세요!"
    },
    "badge": "FAQ & 문제해결"
  },
  "intro": {
    "title": {
      "mac": "터미널이 처음이신가요? 걱정 마세요!",
      "windows": "명령 프롬프트가 처음이신가요? 걱정 마세요!"
    },
    "description": "Claude Code를 설치하며 겪을 수 있는 모든 어려움을 함께 해결해드립니다"
  },
  "section_headers": {
    "urgent": {
      "title": "지금 막혔어요!",
      "tagText": "즉시 해결",
      "icon": "fas fa-exclamation-triangle",
      "tagIcon": "fas fa-bolt",
      "tagClass": "urgent"
    },
    "normal": {
      "title": "이게 정상인가요?",
      "tagText": "불안감 해소",
      "icon": "fas fa-question-circle",
      "tagIcon": "fas fa-heart",
      "tagClass": "comfort"
    },
    "basics": {
      "title": "시작 전 알아두기",
      "tagText": "기초 지식",
      "icon": "fas fa-book",
      "tagIcon": "fas fa-graduation-cap",
      "tagClass": "knowledge"
    }
  },
  "urgent": {
    "mac": {
      "terminal_not_found": {
        "title": "터미널이 어디 있나요? 찾을 수가 없어요!",
        "description": "Mac에서 터미널을 찾는 가장 쉬운 방법을 알려드릴게요:",
        "steps": [
          "Command (Cmd) ⌘ + Space 를 누르세요 (Spotlight 검색)",
          "\"터미널\" 또는 \"Terminal\"이라고 입력하세요",
          "Enter 를 누르면 터미널이 열려요!"
        ],
        "terminal_example": {
          "title": "터미널을 열면 이렇게 보입니다",
          "content": "Last login: Mon Jan 8 10:32:15 on ttys001"
        },
        "tip": "자주 사용하실 거라면 터미널을 Dock에 추가해두세요. 터미널 아이콘을 우클릭하고 \"옵션 > Dock에 유지\"를 선택하면 됩니다."
      },
      "password_invisible": {
        "title": "비밀번호를 입력해도 아무것도 안 보여요!",
        "description": "이건 정상이에요! 터미널은 보안상 비밀번호를 입력할 때 아무것도 표시하지 않습니다.",
        "terminal_example": {
          "title": "비밀번호 입력 시 화면 - 정상적인 상황",
          "command": "sudo npm install -g claude",
          "output": "Password:",
          "comment": "← 비밀번호를 입력해도 화면에 아무것도 표시되지 않습니다 (보안상 정상)"
        },
        "steps": [
          "그냥 Mac 로그인 비밀번호를 입력하세요",
          "화면에 아무것도 안 보여도 입력은 되고 있어요",
          "다 입력했으면 Enter 를 누르세요"
        ],
        "tip": "비밀번호가 틀렸다고 나오면 다시 천천히 입력해보세요. Caps Lock이 켜져있는지도 확인하세요!"
      },
      "permission_denied": {
        "title": "Permission denied 오류가 계속 나와요",
        "description": "권한 문제예요. Mac에서는 시스템 폴더에 뭔가를 설치할 때 관리자 권한이 필요해요.",
        "wrong_way": {
          "title": "잘못된 방법 - 권한 오류 발생",
          "command": "npm install -g claude",
          "errors": [
            "npm ERR! Error: EACCES: permission denied, mkdir '/usr/local/lib/node_modules/claude'",
            "npm ERR! The operation was rejected by your operating system.",
            "npm ERR! It is likely you do not have the permissions to access this file as the current user"
          ]
        },
        "right_way": {
          "title": "올바른 방법 - sudo 사용",
          "command": "sudo npm install -g claude",
          "output": "Password:",
          "comment": "← 여기서 Mac 비밀번호를 입력하면 설치가 진행됩니다"
        },
        "solution": "sudo를 앞에 붙이면 관리자 권한으로 실행됩니다."
      }
    },
    "windows": {
      "cmd_not_found": {
        "title": "명령 프롬프트가 어디 있나요?",
        "description": "Windows에서 명령 프롬프트를 여는 가장 쉬운 방법들:",
        "steps": [
          "방법 1: Windows (Win) ⊞ + R 을 누르고 \"cmd\" 입력 후 Enter",
          "방법 2: 시작 버튼 클릭 → \"cmd\" 또는 \"명령 프롬프트\" 검색",
          "방법 3: Windows (Win) ⊞ + X 누르고 \"명령 프롬프트\" 선택"
        ],
        "terminal_example": {
          "title": "명령 프롬프트를 열면 이렇게 보입니다",
          "content": [
            "Microsoft Windows [Version 10.0.22631.4169]",
            "(c) Microsoft Corporation. All rights reserved."
          ]
        },
        "tip": "명령 프롬프트를 자주 사용하신다면 작업 표시줄에 고정해두면 편해요."
      },
      "access_denied": {
        "title": "액세스가 거부되었습니다 오류가 나와요",
        "description": "Windows에서는 관리자 권한으로 명령 프롬프트를 실행해야 할 때가 있어요.",
        "steps": [
          "명령 프롬프트를 마우스 우클릭",
          "\"관리자 권한으로 실행\" 선택",
          "사용자 계정 컨트롤 창이 뜨면 \"예\" 클릭",
          "다시 명령어를 입력해보세요"
        ]
      }
    }
  },
  "normal": {
    "installation_slow": {
      "title": "설치가 너무 오래 걸려요 (5분 넘게 진행 중)",
      "description": "프로그램 설치는 여러 파일을 다운로드하고 설정하는 과정이라 시간이 걸려요. 특히 처음 설치할 때는 더 그래요.",
      "terminal_example": {
        "title": "설치 진행 중 화면 - 시간이 오래 걸리는 상황",
        "mac": {
          "command": "sudo npm install -g @anthropic-ai/claude-code",
          "outputs": [
            "Password: # ← 비밀번호 입력 후",
            "",
            "npm WARN deprecated har-validator@5.1.5: this library is no longer supported",
            "npm WARN deprecated uuid@3.4.0: Please upgrade to version 7 or higher.",
            "",
            "⠧ Installing: express@4.18.2",
            "⠧ Installing: lodash@4.17.21",
            "⠧ Installing: moment@2.29.4",
            "# ← 이런 식으로 여러 프로그램을 차례대로 설치하고 있어요!"
          ]
        },
        "windows": {
          "command": "npm install -g @anthropic-ai/claude-code",
          "outputs": [
            "npm WARN deprecated har-validator@5.1.5: this library is no longer supported",
            "npm WARN deprecated uuid@3.4.0: Please upgrade to version 7 or higher.",
            "",
            "[░░░░░░░░░░░░░░░░░░░░] | idealTree:claude-code: timing idealTree:node_modules/.staging",
            "# ← 프로그레스 바가 천천히 진행됩니다",
            "",
            "[████░░░░░░░░░░░░░░░░] \\ fetchMetadata: sill resolveWithNewModule express@4.18.2",
            "[████████░░░░░░░░░░░░] | fetchMetadata: timing metavuln:calculate:security-advisory",
            "[████████████░░░░░░░░] / extract:lodash: verb lock using C:\\Users\\username\\AppData\\Roaming\\npm",
            "# ← 각 패키지를 다운로드하고 설치하는 중입니다"
          ]
        }
      },
      "tip": "인터넷 속도에 따라 5-10분 정도 걸릴 수 있어요. 커피 한 잔 하고 오세요!"
    },
    "warn_messages": {
      "title": "설치 중에 WARN 메시지가 여러 개 나왔어요",
      "description": "npm은 설치 중에 다양한 경고를 보여주지만, 대부분은 무시해도 됩니다.",
      "terminal_example": {
        "title": "설치 중 경고 메시지 - 정상적인 상황",
        "mac_command": "npm install some-package",
        "windows_command": "npm install some-package",
        "windows_note": "# → 명령 프롬프트(cmd) 기준입니다",
        "warnings": [
          {
            "text": "npm WARN deprecated package@1.0.0: This package is deprecated",
            "comment": "→ 구버전 패키지라는 경고 (정상)"
          },
          {
            "text": "npm WARN optional SKIPPING OPTIONAL DEPENDENCY",
            "comment": "→ 선택적 구성요소 건너뜀 (정상)"
          },
          {
            "text": "npm WARN some-module@2.1.0 requires a peer dependency",
            "comment": "→ 추가 패키지가 필요하다는 알림 (정상)"
          }
        ]
      },
      "tip": "WARN은 경고일 뿐이에요. ERROR가 아니라면 정상적으로 설치되고 있는 겁니다!"
    },
    "terminal_symbols": {
      "title": {
        "mac": "터미널에 이상한 기호나 색깔이 나와요",
        "windows": "명령 프롬프트에 이상한 기호나 색깔이 나와요"
      },
      "description": {
        "mac": "터미널은 다양한 색상과 기호로 정보를 구분해서 보여줍니다.",
        "windows": "명령 프롬프트는 다양한 색상과 기호로 정보를 구분해서 보여줍니다."
      },
      "terminal_example": {
        "title": {
          "mac": "터미널 색상과 기호 예시",
          "windows": "명령 프롬프트 색상과 기호 예시"
        },
        "command": "npm install express",
        "outputs": [
          {
            "text": "added 64 packages in 3s",
            "comment": "→ 기본 색상 = 성공/완료"
          },
          {
            "text": "npm WARN deprecated package@1.0.0: This package is deprecated",
            "type": "warn",
            "comment": "→ 노란색 WARN = 경고 (무시 가능)"
          },
          {
            "text": "npm ERR! code ENOENT\nnpm ERR! syscall open",
            "type": "error"
          },
          {
            "text": "npm ERR! path /Users/username/package.json",
            "type": "error",
            "os": "mac"
          },
          {
            "text": "npm ERR! path C:\\Users\\사용자명\\package.json",
            "type": "error",
            "os": "windows"
          },
          {
            "comment": "→ 빨간색 ERR! = 오류 (확인 필요)"
          }
        ],
        "prompt_symbols": {
          "mac": {
            "symbol": "% 또는 $",
            "meaning": "명령어 입력 대기 중"
          },
          "windows": {
            "symbol": ">",
            "meaning": "명령어 입력 대기 중"
          }
        }
      }
    }
  },
  "basics": {
    "copy_paste": {
      "title": "복사/붙여넣기는 어떻게 하나요?",
      "description": {
        "mac": "터미널에서는 복사/붙여넣기 방법이 조금 달라요:",
        "windows": "명령 프롬프트에서는 복사/붙여넣기 방법이 조금 달라요:"
      },
      "methods": {
        "mac": {
          "copy": "텍스트 선택 후 Command (Cmd) ⌘ + C",
          "paste": "Command (Cmd) ⌘ + V"
        },
        "windows": {
          "copy": "텍스트 선택 후 Control (Ctrl) + C 또는 마우스 우클릭",
          "paste": "Control (Ctrl) + V 또는 마우스 우클릭"
        }
      }
    },
    "terminal_escape": {
      "title": {
        "mac": "터미널에서 실수로 이상한 걸 쳤어요",
        "windows": "명령 프롬프트에서 실수로 이상한 걸 쳤어요"
      },
      "description": {
        "mac": "괜찮아요! 터미널에서 빠져나오는 방법들:",
        "windows": "괜찮아요! 명령 프롬프트에서 빠져나오는 방법들:"
      },
      "solutions": [
        "Control (Ctrl) + C : 현재 실행 중인 것을 중단",
        "Control (Ctrl) + D : 프로그램 종료",
        "exit 입력 : 터미널/명령 프롬프트 종료",
        "최후의 수단: 터미널/명령 프롬프트 창을 그냥 닫고 새로 열기"
      ],
      "exit_example": {
        "title": {
          "mac": "터미널 완전히 종료하기",
          "windows": "명령 프롬프트 완전히 종료하기"
        },
        "command": "exit",
        "result": {
          "mac": "[Process completed]",
          "windows": "# → 명령 프롬프트 창이 닫힙니다"
        },
        "comment": {
          "mac": "→ 터미널 창이 닫히거나, 설정에 따라 이 메시지만 남을 수 있습니다"
        }
      }
    },
    "basic_commands": {
      "title": "cd, ls 같은 명령어는 뭔가요?",
      "description": {
        "mac": "터미널에서 자주 쓰는 기본 명령어들이에요:",
        "windows": "명령 프롬프트에서 자주 쓰는 기본 명령어들이에요:"
      },
      "commands": {
        "mac": {
          "pwd_name": "pwd",
          "pwd_desc": "현재 위치 확인하기",
          "pwd_command": "pwd",
          "pwd_output": "/Users/yourname",
          "pwd_comment": "→ 지금 /Users/yourname 폴더에 있다는 뜻이에요",
          "ls_name": "ls",
          "ls_desc": "파일과 폴더 목록 보기",
          "ls_command": "ls",
          "ls_output": "Desktop    Documents    Downloads    Pictures",
          "ls_comment": "→ 현재 폴더에 있는 파일과 폴더들이 보여요",
          "cd_name": "cd",
          "cd_desc": "다른 폴더로 이동하기",
          "cd_command": "cd Desktop",
          "cd_prompt": "사용자명@MacBook-Pro Desktop %",
          "cd_comment": "→ Desktop 폴더로 이동했어요! (프롬프트가 바뀐 걸 보세요)",
          "cd_up_name": "cd ..",
          "cd_up_desc": "상위 폴더로 돌아가기",
          "cd_up_from": "사용자명@MacBook-Pro Desktop %",
          "cd_up_command": "cd ..",
          "cd_up_to": "사용자명@MacBook-Pro ~ %",
          "cd_up_comment": "→ Desktop에서 홈 폴더로 돌아왔어요",
          "mkdir_name": "mkdir",
          "mkdir_desc": "새 폴더 만들기",
          "mkdir_command1": "mkdir my-project",
          "mkdir_command2": "ls",
          "mkdir_output": "Desktop    Documents    Downloads    Pictures    my-project",
          "mkdir_comment": "→ my-project 폴더가 새로 만들어졌어요!",
          "clear_name": "clear",
          "clear_desc": "화면 정리하기",
          "clear_command": "clear",
          "clear_comment": "→ 터미널 화면이 깨끗해져요! (이전 내용은 스크롤로 볼 수 있어요)",
          "cat_name": "cat",
          "cat_desc": "파일 내용 보기",
          "cat_command": "cat package.json",
          "cat_output": "{\n  \"name\": \"my-project\",\n  \"version\": \"1.0.0\",\n  \"description\": \"My first project\"\n}",
          "cat_comment": "→ 파일의 전체 내용이 보여요",
          "which_name": "which",
          "which_desc": "프로그램 설치 위치 확인",
          "which_command1": "which node",
          "which_command2": "which npm",
          "which_output1": "/usr/local/bin/node",
          "which_output2": "/usr/local/bin/npm",
          "which_comment": "→ Node.js와 npm이 제대로 설치되어 있네요!",
          "cp_name": "cp",
          "cp_desc": "파일 복사하기",
          "cp_command1": "cp README.md README-backup.md",
          "cp_command2": "ls *.md",
          "cp_output": "README-backup.md    README.md",
          "cp_comment": "→ README.md 파일의 복사본이 만들어졌어요",
          "mv_name": "mv",
          "mv_desc": "파일 이동하거나 이름 바꾸기",
          "mv_rename_command": "mv old-name.txt new-name.txt",
          "mv_rename_comment": "→ 파일 이름이 바뀌었어요",
          "mv_move_command": "mv file.txt Desktop/",
          "mv_move_comment": "→ file.txt가 Desktop 폴더로 이동했어요",
          "touch_name": "touch",
          "touch_desc": "빈 파일 만들기",
          "touch_command1": "touch index.js",
          "touch_command2": "ls *.js",
          "touch_output": "index.js",
          "touch_comment": "→ 빈 index.js 파일이 만들어졌어요"
        },
        "windows": {
          "cd_name": "cd",
          "cd_desc": "현재 위치 확인하기",
          "cd_command": "cd",
          "cd_output": "C:\\Users\\사용자명",
          "cd_comment": "→ 지금 C:\\Users\\사용자명 폴더에 있다는 뜻이에요",
          "dir_name": "dir",
          "dir_desc": "파일과 폴더 목록 보기",
          "dir_command": "dir",
          "dir_output": "2025-07-16  오전 10:30    <DIR>          .\n2025-07-16  오전 10:30    <DIR>          ..\n2025-07-16  오전 09:15    <DIR>          Desktop\n2025-07-15  오후 02:30    <DIR>          Documents\n2025-07-14  오후 05:45    <DIR>          Downloads\n2025-07-13  오전 11:20    <DIR>          Pictures",
          "dir_comment": "→ 현재 폴더에 있는 파일과 폴더들이 보여요",
          "cd_folder_name": "cd",
          "cd_folder_desc": "다른 폴더로 이동하기",
          "cd_folder_command": "cd Desktop",
          "cd_folder_prompt": "C:\\Users\\사용자명\\Desktop>",
          "cd_folder_comment": "→ Desktop 폴더로 이동했어요! (프롬프트가 바뀐 걸 보세요)",
          "cd_up_name": "cd ..",
          "cd_up_desc": "상위 폴더로 돌아가기",
          "cd_up_from": "C:\\Users\\사용자명\\Desktop>",
          "cd_up_command": "cd ..",
          "cd_up_to": "C:\\Users\\사용자명>",
          "cd_up_comment": "→ Desktop에서 사용자 폴더로 돌아왔어요",
          "mkdir_name": "mkdir",
          "mkdir_desc": "새 폴더 만들기",
          "mkdir_command1": "mkdir my-project",
          "mkdir_command2": "dir",
          "mkdir_output": "2025-07-16  오전 10:35    <DIR>          my-project\n2025-07-16  오전 10:30    <DIR>          Desktop\n2025-07-15  오후 02:30    <DIR>          Documents",
          "mkdir_comment": "→ my-project 폴더가 새로 만들어졌어요!",
          "cls_name": "cls",
          "cls_desc": "화면 정리하기",
          "cls_command": "cls",
          "cls_comment": "→ 명령 프롬프트 화면이 깨끗해져요!",
          "type_name": "type",
          "type_desc": "파일 내용 보기",
          "type_command": "type package.json",
          "type_output": "{\n  \"name\": \"my-project\",\n  \"version\": \"1.0.0\",\n  \"description\": \"My first project\"\n}",
          "type_comment": "→ 파일의 전체 내용이 보여요",
          "where_name": "where",
          "where_desc": "프로그램 설치 위치 확인",
          "where_command1": "where node",
          "where_command2": "where npm",
          "where_output1": "C:\\Program Files\\nodejs\\node.exe",
          "where_output2": "C:\\Program Files\\nodejs\\npm.cmd",
          "where_comment": "→ Node.js와 npm이 제대로 설치되어 있네요!",
          "copy_name": "copy",
          "copy_desc": "파일 복사하기",
          "copy_command1": "copy README.md README-backup.md",
          "copy_command2": "dir *.md",
          "copy_output": "        1개 파일이 복사되었습니다.\n2025-07-16  오전 10:40         1,245 README-backup.md\n2025-07-16  오전 10:30         1,245 README.md",
          "copy_comment": "→ README.md 파일의 복사본이 만들어졌어요",
          "move_ren_name": "move 또는 ren",
          "move_ren_desc": "파일 이동하거나 이름 바꾸기",
          "ren_command": "ren old-name.txt new-name.txt",
          "ren_comment": "→ 파일 이름이 바뀌었어요",
          "move_command": "move file.txt Desktop",
          "move_output": "        1개 파일을 이동했습니다.",
          "move_comment": "→ file.txt가 Desktop 폴더로 이동했어요",
          "echo_name": "echo >",
          "echo_desc": "빈 파일 만들기",
          "echo_command1": "echo. > index.js",
          "echo_command2": "dir *.js",
          "echo_output": "2025-07-16  오전 10:45             2 index.js",
          "echo_comment": "→ index.js 파일이 만들어졌어요"
        }
      }
    },
    "api_key": {
      "title": "API Key가 뭐고 어디서 받나요?",
      "description": "API Key는 Claude가 당신을 인식하는 비밀번호 같은 거예요.",
      "steps": [
        "console.anthropic.com 접속",
        "회원가입 또는 로그인",
        "\"API Keys\" 메뉴 클릭",
        "\"Create Key\" 버튼 클릭",
        "생성된 키를 안전한 곳에 복사해두세요"
      ],
      "warning": "API Key는 한 번만 보여줘요! 꼭 안전한 곳에 저장해두세요."
    }
  },
  "alerts": {
    "terminal_dock_tip": {
      "title": "Tip",
      "content": "자주 사용하실 거라면 터미널을 Dock에 추가해두세요. 터미널 아이콘을 우클릭하고 \"옵션 > Dock에 유지\"를 선택하면 됩니다."
    },
    "cmd_taskbar_tip": {
      "title": "팁",
      "content": "명령 프롬프트를 자주 사용하신다면 작업 표시줄에 고정해두면 편해요."
    },
    "installation_time": {
      "title": "정상이에요!",
      "content": "인터넷 속도에 따라 5-10분 정도 걸릴 수 있어요. 커피 한 잔 하고 오세요!"
    },
    "warn_vs_error": {
      "title": "알아두세요",
      "content": "WARN은 경고일 뿐이에요. ERROR가 아니라면 정상적으로 설치되고 있는 겁니다!"
    },
    "api_key_warning": {
      "title": "중요",
      "content": "API Key는 한 번만 보여줘요! 꼭 안전한 곳에 저장해두세요."
    }
  },
  "common_issues": {
    "password_tips": "비밀번호가 틀렸다고 나오면 다시 천천히 입력해보세요. Caps Lock이 켜져있는지도 확인하세요!"
  },
  "additional_info": {
    "sudo_explanation": "sudo를 앞에 붙이면 관리자 권한으로 실행됩니다."
  },
  "repl": {
    "title": {
      "mac": "Claude Code 종료하기 - 터미널은 유지",
      "windows": "Claude Code 종료하기 - 명령 프롬프트는 유지"
    },
    "description": "Enter를 누르면 Claude Code가 종료됩니다"
  },
  "structured_data": {
    "questions": [
      {
        "q": "command not found: claude 오류가 나와요",
        "a": "Claude Code가 아직 설치되지 않았거나 PATH 설정이 안 되어 있을 수 있습니다. 'npm install -g @anthropic-ai/claude-code' 명령어로 다시 설치해보세요."
      },
      {
        "q": "permission denied 오류가 발생해요",
        "a": "Mac/Linux에서는 'sudo npm install -g @anthropic-ai/claude-code'로 설치하세요. Windows에서는 관리자 권한으로 명령 프롬프트를 실행해야 합니다."
      },
      {
        "q": "Claude Code를 무료로 사용할 수 있나요?",
        "a": "Claude Code는 Claude Pro 구독($20/월)이 필요합니다. API 사용료는 별도로 청구되지 않습니다."
      },
      {
        "q": "Windows에서도 사용할 수 있나요?",
        "a": "네, Windows 10 이상에서 사용 가능합니다. Git for Windows를 먼저 설치하는 것을 권장합니다."
      },
      {
        "q": "Node.js 버전이 낮다고 나와요",
        "a": "Claude Code는 Node.js 18 이상이 필요합니다. 'node --version'으로 버전을 확인하고, nodejs.org에서 최신 LTS 버전을 설치하세요."
      },
      {
        "q": "로그인이 안 돼요 (claude auth login)",
        "a": "브라우저가 자동으로 열리지 않으면 터미널에 표시된 URL을 직접 복사해서 브라우저에 붙여넣으세요. Claude Pro 계정으로 로그인해야 합니다."
      }
    ]
  }
}